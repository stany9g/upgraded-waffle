// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WepApi.DataAccess;

namespace WepApi.DataAccess.Migrations
{
    [DbContext(typeof(CompanyContext))]
    partial class CompanyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("BranchSupplier", b =>
                {
                    b.Property<int>("CustomersId")
                        .HasColumnType("int");

                    b.Property<int>("SuppliersId")
                        .HasColumnType("int");

                    b.HasKey("CustomersId", "SuppliersId");

                    b.HasIndex("SuppliersId");

                    b.ToTable("BranchSupplier");
                });

            modelBuilder.Entity("WepApi.DataAccess.Models.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId")
                        .IsUnique();

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("WepApi.DataAccess.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("WepApi.DataAccess.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SupervisorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("SupervisorId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("WepApi.DataAccess.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BranchSuppliers");
                });

            modelBuilder.Entity("WepApi.DataAccess.Models.WorksWith", b =>
                {
                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("Sales")
                        .HasColumnType("int");

                    b.HasKey("ClientId", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("WorksWith");
                });

            modelBuilder.Entity("BranchSupplier", b =>
                {
                    b.HasOne("WepApi.DataAccess.Models.Branch", null)
                        .WithMany()
                        .HasForeignKey("CustomersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WepApi.DataAccess.Models.Supplier", null)
                        .WithMany()
                        .HasForeignKey("SuppliersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WepApi.DataAccess.Models.Branch", b =>
                {
                    b.HasOne("WepApi.DataAccess.Models.Employee", "Manager")
                        .WithOne("Manages")
                        .HasForeignKey("WepApi.DataAccess.Models.Branch", "ManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("WepApi.DataAccess.Models.Client", b =>
                {
                    b.HasOne("WepApi.DataAccess.Models.Branch", "Branch")
                        .WithMany("Clients")
                        .HasForeignKey("BranchId");

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("WepApi.DataAccess.Models.Employee", b =>
                {
                    b.HasOne("WepApi.DataAccess.Models.Branch", "Branch")
                        .WithMany("Workers")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("WepApi.DataAccess.Models.Employee", "Supervisor")
                        .WithMany("Subordinates")
                        .HasForeignKey("SupervisorId");

                    b.Navigation("Branch");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("WepApi.DataAccess.Models.WorksWith", b =>
                {
                    b.HasOne("WepApi.DataAccess.Models.Client", "Client")
                        .WithMany("Partners")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WepApi.DataAccess.Models.Employee", "Employee")
                        .WithMany("Clients")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("WepApi.DataAccess.Models.Branch", b =>
                {
                    b.Navigation("Clients");

                    b.Navigation("Workers");
                });

            modelBuilder.Entity("WepApi.DataAccess.Models.Client", b =>
                {
                    b.Navigation("Partners");
                });

            modelBuilder.Entity("WepApi.DataAccess.Models.Employee", b =>
                {
                    b.Navigation("Clients");

                    b.Navigation("Manages");

                    b.Navigation("Subordinates");
                });
#pragma warning restore 612, 618
        }
    }
}
